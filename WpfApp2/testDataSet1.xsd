<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="testDataSet1" targetNamespace="http://tempuri.org/testDataSet1.xsd" xmlns:mstns="http://tempuri.org/testDataSet1.xsd" xmlns="http://tempuri.org/testDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="testConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="testConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfApp2.Properties.Settings.GlobalReference.Default.testConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccessoriesTableAdapter" GeneratorDataComponentClassName="AccessoriesTableAdapter" Name="Accessories" UserDataComponentName="AccessoriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.Accessories" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Accessories] WHERE (([AccessoryID] = @Original_AccessoryID) AND ((@IsNull_AccessoryName = 1 AND [AccessoryName] IS NULL) OR ([AccessoryName] = @Original_AccessoryName)) AND ((@IsNull_Category = 1 AND [Category] IS NULL) OR ([Category] = @Original_Category)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AccessoryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccessoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Category" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Accessories] ([AccessoryName], [Category], [Price]) VALUES (@AccessoryName, @Category, @Price);
SELECT AccessoryID, AccessoryName, Category, Price FROM Accessories WHERE (AccessoryID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccessoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccessoryID, AccessoryName, Category, Price FROM dbo.Accessories</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Accessories] SET [AccessoryName] = @AccessoryName, [Category] = @Category, [Price] = @Price WHERE (([AccessoryID] = @Original_AccessoryID) AND ((@IsNull_AccessoryName = 1 AND [AccessoryName] IS NULL) OR ([AccessoryName] = @Original_AccessoryName)) AND ((@IsNull_Category = 1 AND [Category] IS NULL) OR ([Category] = @Original_Category)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)));
SELECT AccessoryID, AccessoryName, Category, Price FROM Accessories WHERE (AccessoryID = @AccessoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccessoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AccessoryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccessoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccessoryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Category" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccessoryID" ColumnName="AccessoryID" DataSourceName="test.dbo.Accessories" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccessoryID" DataSetColumn="AccessoryID" />
              <Mapping SourceColumn="AccessoryName" DataSetColumn="AccessoryName" />
              <Mapping SourceColumn="Category" DataSetColumn="Category" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQueryAccessories" Modifier="Public" Name="InsertQueryAccessories" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQueryAccessories">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Accessories] ([AccessoryName], [Category], [Price]) VALUES (@AccessoryName, @Category, @Price);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccessoryName" ColumnName="AccessoryName" DataSourceName="test.dbo.Accessories" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@AccessoryName" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="AccessoryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Category" ColumnName="Category" DataSourceName="test.dbo.Accessories" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Price" ColumnName="Price" DataSourceName="test.dbo.Accessories" DataTypeServer="decimal(10, 2)" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="9" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccessoryBrandsTableAdapter" GeneratorDataComponentClassName="AccessoryBrandsTableAdapter" Name="AccessoryBrands" UserDataComponentName="AccessoryBrandsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.AccessoryBrands" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AccessoryBrands] WHERE (([AccessoryBrandsID] = @Original_AccessoryBrandsID) AND ((@IsNull_AccessoryID = 1 AND [AccessoryID] IS NULL) OR ([AccessoryID] = @Original_AccessoryID)) AND ((@IsNull_BrandID = 1 AND [BrandID] IS NULL) OR ([BrandID] = @Original_BrandID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryBrandsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryBrandsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AccessoryBrands] ([AccessoryID], [BrandID]) VALUES (@AccessoryID, @BrandID);
SELECT AccessoryBrandsID, AccessoryID, BrandID FROM AccessoryBrands WHERE (AccessoryBrandsID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccessoryBrandsID, AccessoryID, BrandID FROM dbo.AccessoryBrands</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AccessoryBrands] SET [AccessoryID] = @AccessoryID, [BrandID] = @BrandID WHERE (([AccessoryBrandsID] = @Original_AccessoryBrandsID) AND ((@IsNull_AccessoryID = 1 AND [AccessoryID] IS NULL) OR ([AccessoryID] = @Original_AccessoryID)) AND ((@IsNull_BrandID = 1 AND [BrandID] IS NULL) OR ([BrandID] = @Original_BrandID)));
SELECT AccessoryBrandsID, AccessoryID, BrandID FROM AccessoryBrands WHERE (AccessoryBrandsID = @AccessoryBrandsID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryBrandsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryBrandsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccessoryBrandsID" ColumnName="AccessoryBrandsID" DataSourceName="test.dbo.AccessoryBrands" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccessoryBrandsID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccessoryBrandsID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccessoryBrandsID" DataSetColumn="AccessoryBrandsID" />
              <Mapping SourceColumn="AccessoryID" DataSetColumn="AccessoryID" />
              <Mapping SourceColumn="BrandID" DataSetColumn="BrandID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQueryAccessoryBrands" Modifier="Public" Name="InsertQueryAccessoryBrands" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQueryAccessoryBrands">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[AccessoryBrands] ([AccessoryID], [BrandID]) VALUES (@AccessoryID, @BrandID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="AccessoryID" ColumnName="AccessoryID" DataSourceName="test.dbo.AccessoryBrands" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccessoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccessoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="BrandID" ColumnName="BrandID" DataSourceName="test.dbo.AccessoryBrands" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BrandID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BrandsTableAdapter" GeneratorDataComponentClassName="BrandsTableAdapter" Name="Brands" UserDataComponentName="BrandsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.Brands" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Brands] WHERE (([BrandID] = @Original_BrandID) AND ((@IsNull_BrandName = 1 AND [BrandName] IS NULL) OR ([BrandName] = @Original_BrandName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BrandName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BrandName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Brands] ([BrandName]) VALUES (@BrandName);
SELECT BrandID, BrandName FROM Brands WHERE (BrandID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BrandName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BrandID, BrandName FROM dbo.Brands</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Brands] SET [BrandName] = @BrandName WHERE (([BrandID] = @Original_BrandID) AND ((@IsNull_BrandName = 1 AND [BrandName] IS NULL) OR ([BrandName] = @Original_BrandName)));
SELECT BrandID, BrandName FROM Brands WHERE (BrandID = @BrandID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BrandName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BrandName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BrandName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BrandName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BrandID" ColumnName="BrandID" DataSourceName="test.dbo.Brands" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BrandID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BrandID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BrandID" DataSetColumn="BrandID" />
              <Mapping SourceColumn="BrandName" DataSetColumn="BrandName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQueryBrands" Modifier="Public" Name="InsertQueryBrands" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQueryBrands">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Brands] ([BrandName]) VALUES (@BrandName);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="BrandName" ColumnName="BrandName" DataSourceName="test.dbo.Brands" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@BrandName" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="BrandName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="testDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="testDataSet1" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="testDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Accessories" msprop:Generator_RowEvHandlerName="AccessoriesRowChangeEventHandler" msprop:Generator_RowDeletedName="AccessoriesRowDeleted" msprop:Generator_RowDeletingName="AccessoriesRowDeleting" msprop:Generator_RowEvArgName="AccessoriesRowChangeEvent" msprop:Generator_TablePropName="Accessories" msprop:Generator_RowChangedName="AccessoriesRowChanged" msprop:Generator_UserTableName="Accessories" msprop:Generator_RowChangingName="AccessoriesRowChanging" msprop:Generator_RowClassName="AccessoriesRow" msprop:Generator_TableClassName="AccessoriesDataTable" msprop:Generator_TableVarName="tableAccessories">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccessoryID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="AccessoryIDColumn" msprop:Generator_ColumnPropNameInRow="AccessoryID" msprop:Generator_UserColumnName="AccessoryID" msprop:Generator_ColumnVarNameInTable="columnAccessoryID" type="xs:int" />
              <xs:element name="AccessoryName" msprop:Generator_ColumnPropNameInTable="AccessoryNameColumn" msprop:Generator_ColumnPropNameInRow="AccessoryName" msprop:Generator_UserColumnName="AccessoryName" msprop:Generator_ColumnVarNameInTable="columnAccessoryName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Category" msprop:Generator_ColumnPropNameInTable="CategoryColumn" msprop:Generator_ColumnPropNameInRow="Category" msprop:Generator_UserColumnName="Category" msprop:Generator_ColumnVarNameInTable="columnCategory" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_UserColumnName="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AccessoryBrands" msprop:Generator_RowEvHandlerName="AccessoryBrandsRowChangeEventHandler" msprop:Generator_RowDeletedName="AccessoryBrandsRowDeleted" msprop:Generator_RowDeletingName="AccessoryBrandsRowDeleting" msprop:Generator_RowEvArgName="AccessoryBrandsRowChangeEvent" msprop:Generator_TablePropName="AccessoryBrands" msprop:Generator_RowChangedName="AccessoryBrandsRowChanged" msprop:Generator_UserTableName="AccessoryBrands" msprop:Generator_RowChangingName="AccessoryBrandsRowChanging" msprop:Generator_RowClassName="AccessoryBrandsRow" msprop:Generator_TableClassName="AccessoryBrandsDataTable" msprop:Generator_TableVarName="tableAccessoryBrands">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccessoryBrandsID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="AccessoryBrandsIDColumn" msprop:Generator_ColumnPropNameInRow="AccessoryBrandsID" msprop:Generator_UserColumnName="AccessoryBrandsID" msprop:Generator_ColumnVarNameInTable="columnAccessoryBrandsID" type="xs:int" />
              <xs:element name="AccessoryID" msprop:Generator_ColumnPropNameInTable="AccessoryIDColumn" msprop:Generator_ColumnPropNameInRow="AccessoryID" msprop:Generator_UserColumnName="AccessoryID" msprop:Generator_ColumnVarNameInTable="columnAccessoryID" type="xs:int" minOccurs="0" />
              <xs:element name="BrandID" msprop:Generator_ColumnPropNameInTable="BrandIDColumn" msprop:Generator_ColumnPropNameInRow="BrandID" msprop:Generator_UserColumnName="BrandID" msprop:Generator_ColumnVarNameInTable="columnBrandID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Brands" msprop:Generator_RowEvHandlerName="BrandsRowChangeEventHandler" msprop:Generator_RowDeletedName="BrandsRowDeleted" msprop:Generator_RowDeletingName="BrandsRowDeleting" msprop:Generator_RowEvArgName="BrandsRowChangeEvent" msprop:Generator_TablePropName="Brands" msprop:Generator_RowChangedName="BrandsRowChanged" msprop:Generator_UserTableName="Brands" msprop:Generator_RowChangingName="BrandsRowChanging" msprop:Generator_RowClassName="BrandsRow" msprop:Generator_TableClassName="BrandsDataTable" msprop:Generator_TableVarName="tableBrands">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BrandID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="BrandIDColumn" msprop:Generator_ColumnPropNameInRow="BrandID" msprop:Generator_UserColumnName="BrandID" msprop:Generator_ColumnVarNameInTable="columnBrandID" type="xs:int" />
              <xs:element name="BrandName" msprop:Generator_ColumnPropNameInTable="BrandNameColumn" msprop:Generator_ColumnPropNameInRow="BrandName" msprop:Generator_UserColumnName="BrandName" msprop:Generator_ColumnVarNameInTable="columnBrandName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accessories" />
      <xs:field xpath="mstns:AccessoryID" />
    </xs:unique>
    <xs:unique name="AccessoryBrands_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccessoryBrands" />
      <xs:field xpath="mstns:AccessoryBrandsID" />
    </xs:unique>
    <xs:unique name="Brands_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Brands" />
      <xs:field xpath="mstns:BrandID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Accessory__Acces__4D94879B" msdata:parent="Accessories" msdata:child="AccessoryBrands" msdata:parentkey="AccessoryID" msdata:childkey="AccessoryID" msprop:Generator_UserParentTable="Accessories" msprop:Generator_UserChildTable="AccessoryBrands" msprop:Generator_RelationVarName="relationFK__Accessory__Acces__4D94879B" msprop:Generator_ChildPropName="GetAccessoryBrandsRows" msprop:Generator_ParentPropName="AccessoriesRow" msprop:Generator_UserRelationName="FK__Accessory__Acces__4D94879B" />
      <msdata:Relationship name="FK__Accessory__Brand__4E88ABD4" msdata:parent="Brands" msdata:child="AccessoryBrands" msdata:parentkey="BrandID" msdata:childkey="BrandID" msprop:Generator_UserParentTable="Brands" msprop:Generator_UserChildTable="AccessoryBrands" msprop:Generator_RelationVarName="relationFK__Accessory__Brand__4E88ABD4" msprop:Generator_ChildPropName="GetAccessoryBrandsRows" msprop:Generator_UserRelationName="FK__Accessory__Brand__4E88ABD4" msprop:Generator_ParentPropName="BrandsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>